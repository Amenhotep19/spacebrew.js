Function.prototype.bind||(Function.prototype.bind=function(a){if("function"!==typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var b=Array.prototype.slice.call(arguments,1),c=this,d=function(){},e=function(){return c.apply(this instanceof d?this:a||window,b.concat(Array.prototype.slice.call(arguments)))};d.prototype=this.prototype;e.prototype=new d;return e});
var Spacebrew=Spacebrew||{},WebSocket=WebSocket||{},window=window||void 0,module=module||void 0;window&&!window.getQueryString&&(window.getQueryString=function(a){if(window.location)return a=a.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]"),a=RegExp("[\\?&]"+a+"=([^&#]*)").exec(window.location.href),null==a?"":a[1]});!window&&module&&(WebSocket=require("ws"),module.exports={Spacebrew:Spacebrew});
Spacebrew.Client=function(a,b,c,d,e,f){this.debug=e||!1;this._name=b||"javascript client";window&&(this._name=""!==window.getQueryString("name")?unescape(window.getQueryString("name")):this._name);this._description=c||"spacebrew javascript client";window&&(this._description=""!==window.getQueryString("description")?unescape(window.getQueryString("description")):this._description);this.server=a||"sandbox.spacebrew.cc";window&&(this.server=""!==window.getQueryString("server")?unescape(window.getQueryString("server")):
this.server);this.port=d||9E3;window&&(d=window.getQueryString("port"),""!==d&&!isNaN(d)&&(this.port=d));this.socket=null;this.client_config={name:this._name,description:this._description,publish:{messages:[]},subscribe:{messages:[]}};this.admin_config=[{admin:!0}];this.admin={active:f,clients:[]};this._isConnected=!1};
Spacebrew.Client.prototype.connect=function(){try{this.socket=new WebSocket("ws://"+this.server+":"+this.port),this.socket.onopen=this._onOpen.bind(this),this.socket.onmessage=this._onMessage.bind(this),this.socket.onclose=this._onClose.bind(this)}catch(a){this._isConnected=!1,console.log("[connect:Spacebrew] connection attempt failed")}};
Spacebrew.Client.prototype.close=function(){try{!0==this._isConnected&&(this.socket.close(),this._isConnected=!1,console.log("[close:Spacebrew] closing websocket connection"))}catch(a){this._isConnected=!1}};Spacebrew.Client.prototype.onOpen=function(){};Spacebrew.Client.prototype.onClose=function(){};Spacebrew.Client.prototype.onRangeMessage=function(){};Spacebrew.Client.prototype.onBooleanMessage=function(){};Spacebrew.Client.prototype.onStringMessage=function(){};
Spacebrew.Client.prototype.onCustomMessage=function(){};Spacebrew.Client.prototype.addPublish=function(a,b,c){this.client_config.publish.messages.push({name:a,type:b,"default":c});this.updatePubSub()};Spacebrew.Client.prototype.addSubscribe=function(a,b){this.client_config.subscribe.messages.push({name:a,type:b});this.updatePubSub()};Spacebrew.Client.prototype.updatePubSub=function(){this._isConnected&&(this.socket.send(JSON.stringify({config:this.client_config})),this.admin.active&&this.socket.send(JSON.stringify({admin:this.admin_config})))};
Spacebrew.Client.prototype.send=function(a,b,c){this.socket.send(JSON.stringify({message:{clientName:this._name,name:a,type:b,value:c}}))};Spacebrew.Client.prototype._onOpen=function(){console.log("[_onOpen:Spacebrew] Spacebrew connection opened, client name is: "+this._name);this._isConnected=!0;this.updatePubSub();this.onOpen()};
Spacebrew.Client.prototype._onMessage=function(a){a=JSON.parse(a.data);if(a.message){var b=a.message.name,c=a.message.type;a=a.message.value;switch(c){case "boolean":this.onBooleanMessage(b,"true"==a);break;case "string":this.onStringMessage(b,a);break;case "range":this.onRangeMessage(b,Number(a));break;default:this.onCustomMessage(b,a,c)}}else if(!a.admin)if(a.remove)this.onRemoveClient(a.remove.name,a.remove.remoteAddress),this.debug&&console.log("handling remove user message ",a.remove);else if(a.route)this.onUpdateRoute(a.route.type,
a.route.publish,a.route.subscribe),this.debug&&console.log("handling route update message ",a.route);else if(a instanceof Array)for(b=0;b<a.length;b++)a[b].config&&(this._onNewClient(a[b].config),this.debug&&console.log("handling client config message ",a[b].config))};Spacebrew.Client.prototype._onClose=function(){console.log("[_onClose:Spacebrew] Spacebrew connection closed");this._isConnected=!1;this.onClose()};
Spacebrew.Client.prototype.name=function(a){if(a){if(this._isConnected)return!1;this._name=a;window&&(this._name=""!==window.getQueryString("name")?unescape(window.getQueryString("name")):this._name);this.client_config.name=this._name}return this._name};
Spacebrew.Client.prototype.description=function(a){if(a){if(this._isConnected)return!1;this._description=a||"spacebrew javascript client";window&&(this._description=""!==window.getQueryString("description")?unescape(window.getQueryString("description")):this._description);this.client_config.description=this._description}return this._description};Spacebrew.Client.prototype.isConnected=function(){return this._isConnected};Spacebrew.Client.prototype.onNewClient=function(){};
Spacebrew.Client.prototype.onUpdateClient=function(){};Spacebrew.Client.prototype.onUpdateRoute=function(){};Spacebrew.Client.prototype.onRemoveClient=function(){};
Spacebrew.Client.prototype._onNewClient=function(a){console.log("new client logged on "+a.name+" address "+a.remoteAddress);console.log(a);for(var b=!0,c=0;c<this.admin.clients.length;c++)this.admin.clients[c].name===a.name&&this.admin.clients[c].remoteAddress===a.remoteAddress&&(this.admin.clients[c].publish=a.publish,this.admin.clients[c].subscribe=a.subscribe,this.admin.clients[c].description=a.description,b=!1,this.onUpdateClient(a.name,a.remoteAddress,a.description,a.publish,a.subscribe));b&&
(this.admin.clients.push(a),this.onNewClient(a.name,a.remoteAddress,a.description,a.publish,a.subscribe))};Spacebrew.Client.prototype.getClient=function(a,b){for(var c=0;c<this.admin.clients.length;c++){var d=this.admin.clients[c].name;if(d[c].name===a&&d[c].remoteAddress===b)return this.admin.clients[c]}};Spacebrew.Client.prototype.addRoute=function(a,b,c,d,e,f){this.updateRoute("add",a,b,c,d,e,f)};Spacebrew.Client.prototype.removeRoute=function(a,b,c,d,e,f){this.updateRoute("remove",a,b,c,d,e,f)};
Spacebrew.Client.prototype._updateRoute=function(a,b,c,d,e,f,g){if(!("add"!==a&&"remove"!==a))if(b.clientName&&b.remoteAddress&&b.name&&b.type&&c.clientName&&c.remoteAddress&&c.name&&c.type)this.socket.send(JSON.stringify({route:{type:a,publish:b,subscribe:c}}));else{var h={name:b,remoteAddress:c,name:d,type:this.getPublishType(b,c,d)};b={name:e,remoteAddress:f,name:g,type:this.getPublishType(b,c,d)};this._updateRoute(a,h,b)}};
Spacebrew.Client.prototype._getPublishType=function(a,b,c){this._getPubSubType("publish",a,b,c)};Spacebrew.Client.prototype.getSubscribeType=function(a,b,c){this._getPubSubType("subscribe",a,b,c)};Spacebrew.Client.prototype._getPubSubType=function(a,b,c,d){for(var e=0;e<this.admin.clients.length;e++){var f=this.admin.clients[e].name;if(f[e].name===b&&f[e].remoteAddress===c)for(f=0;f<this.admin.clients[e][a].messages;f++)if(this.admin.clients[e][a].messages[f].name===d)return this.admin.clients[e][a].messages[f].type}};