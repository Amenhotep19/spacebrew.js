Function.prototype.bind||(Function.prototype.bind=function(a){if("function"!==typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var b=Array.prototype.slice.call(arguments,1),c=this,d=function(){},e=function(){return c.apply(this instanceof d?this:a||window,b.concat(Array.prototype.slice.call(arguments)))};d.prototype=this.prototype;e.prototype=new d;return e});
var Spacebrew=Spacebrew||{},WebSocket=WebSocket||{},window=window||void 0,module=module||void 0;window&&!window.getQueryString&&(window.getQueryString=function(a){if(window.location)return a=a.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]"),a=RegExp("[\\?&]"+a+"=([^&#]*)").exec(window.location.href),null==a?"":a[1]});!window&&module&&(WebSocket=require("ws"),module.exports={Spacebrew:Spacebrew});
Spacebrew.Client=function(a,b,c,d){d=d||{};void 0!=a&&"[object String]"!==toString.call(a)&&(b=a.name||void 0,c=a.description||void 0,d.port=a.port||void 0,d.debug=a.debug||!1,d.reconnect=a.reconnect||!1,a=a.server||void 0);this.debug=d.debug||!1;this.reconnect=d.reconnect||!0;this.reconnect_timer=void 0;this._name=b||"javascript client #";window&&(this._name=""!==window.getQueryString("name")?unescape(window.getQueryString("name")):this._name);this._description=c||"spacebrew javascript client";window&&
(this._description=""!==window.getQueryString("description")?unescape(window.getQueryString("description")):this._description);this.server=a||"sandbox.spacebrew.cc";window&&(this.server=""!==window.getQueryString("server")?unescape(window.getQueryString("server")):this.server);this.port=d.port||9E3;window&&(port=window.getQueryString("port"),""!==port&&!isNaN(port)&&(this.port=port));this.socket=null;this.client_config={name:this._name,description:this._description,publish:{messages:[]},subscribe:{messages:[]}};
this.admin={};this._isConnected=!1};Spacebrew.Client.prototype.connect=function(){try{this.socket=new WebSocket("ws://"+this.server+":"+this.port),this.socket.onopen=this._onOpen.bind(this),this.socket.onmessage=this._onMessage.bind(this),this.socket.onclose=this._onClose.bind(this)}catch(a){this._isConnected=!1,console.log("[connect:Spacebrew] connection attempt failed")}};
Spacebrew.Client.prototype.close=function(){try{this._isConnected&&(this.socket.close(),this._isConnected=!1,console.log("[close:Spacebrew] closing websocket connection"))}catch(a){this._isConnected=!1}};Spacebrew.Client.prototype.onOpen=function(){};Spacebrew.Client.prototype.onClose=function(){};Spacebrew.Client.prototype.onRangeMessage=function(){};Spacebrew.Client.prototype.onBooleanMessage=function(){};Spacebrew.Client.prototype.onStringMessage=function(){};
Spacebrew.Client.prototype.onCustomMessage=function(){};Spacebrew.Client.prototype.addPublish=function(a,b,c){this.client_config.publish.messages.push({name:a,type:b,"default":c});this.updatePubSub()};Spacebrew.Client.prototype.addSubscribe=function(a,b){this.client_config.subscribe.messages.push({name:a,type:b});this.updatePubSub()};Spacebrew.Client.prototype.updatePubSub=function(){this._isConnected&&this.socket.send(JSON.stringify({config:this.client_config}))};
Spacebrew.Client.prototype.send=function(a,b,c){this.socket.send(JSON.stringify({message:{clientName:this._name,name:a,type:b,value:c}}))};
Spacebrew.Client.prototype._onOpen=function(){console.log("[_onOpen:Spacebrew] Spacebrew connection opened, client name is: "+this._name);this._isConnected=!0;this.admin.active&&this.connectAdmin();this.reconnect_timer&&(console.log("[_onOpen:Spacebrew] tearing down reconnect timer"),this.reconnect_timer=clearInterval(this.reconnect_timer),this.reconnect_timer=void 0);this.updatePubSub();this.onOpen()};
Spacebrew.Client.prototype._onMessage=function(a){var b=JSON.parse(a.data),c;if(b.message){if(!b.message.clientName)switch(a=b.message.name,c=b.message.type,b=b.message.value,c){case "boolean":this.onBooleanMessage(a,"true"==b);break;case "string":this.onStringMessage(a,b);break;case "range":this.onRangeMessage(a,Number(b));break;default:this.onCustomMessage(a,b,c)}}else this.admin.active&&this._handleAdminMessages(b)};
Spacebrew.Client.prototype._onClose=function(){var a=this;console.log("[_onClose:Spacebrew] Spacebrew connection closed");this._isConnected=!1;this.admin.active&&(this.admin.remoteAddress=void 0);this.reconnect&&!this.reconnect_timer&&(console.log("[_onClose:Spacebrew] setting up reconnect timer"),this.reconnect_timer=setInterval(function(){!1!=a.isConnected&&(a.connect(),console.log("[reconnect:Spacebrew] attempting to reconnect to spacebrew"))},5E3));this.onClose()};
Spacebrew.Client.prototype.name=function(a){if(a){if(this._isConnected)return!1;this._name=a;window&&(this._name=""!==window.getQueryString("name")?unescape(window.getQueryString("name")):this._name);this.client_config.name=this._name}return this._name};
Spacebrew.Client.prototype.description=function(a){if(a){if(this._isConnected)return!1;this._description=a||"spacebrew javascript client";window&&(this._description=""!==window.getQueryString("description")?unescape(window.getQueryString("description")):this._description);this.client_config.description=this._description}return this._description};Spacebrew.Client.prototype.isConnected=function(){return this._isConnected};
Spacebrew.Client.prototype.extend=function(a){for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b])};